// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  "auto_install_extensions": {
    "html": true,
    "toml": true,
    "dockerfile": true,
    "docker-compose": true,
    "sql": true,
    "lua": true,
    "graqhql": true,
    "justfile": true,
    "julia": true,
    "proto": true,
    "marksman": true,
    "http": true,
    "mermaid": true
  },
  "theme": {
    "mode": "system",
    "light": "One Light",
    "dark": "One Dark"
  },
  "base_keymap": "SublimeText",
  "features": {
    "inline_completion_provider": "copilot"
  },
  "buffer_font_family": "MonaspiceKr Nerd Font",
  "buffer_font_size": 14,
  "ui_font_size": 14,
  "vim_mode": true,
  "confirm_quit": true,
  "restore_on_startup": "none",
  "auto_signature_help": true,
  "relative_line_numbers": true,
  "inlay_hints": {
    "enabled": true
  },
  "assistant": {
    "default_model": {
      "provider": "copilot_chat",
      "model": "claude-3-5-sonnet"
    },
    "version": "2"
  },
  "tabs": {
    "git_status": true,
    "file_icons": true
  },
  "preview_tabs": {
    "enable_preview_from_file_finder": true,
    "enable_preview_from_code_navigation": true
  },
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },
  "auto_update": false,
  "vim": {
    "use_multiline_find": true,
    "use_smartcase_find": true
  },
  "lsp": {
    "cargo-appraiser": {
      //These initialization options are merged into Zed's defaults
      "initialization_options": {
        "renderer": {
          // the formatter may has 3 template strings:
          // - installed: the installed version
          // - latest_matched: the latest compatible version
          // - latest: the latest version, the latest version may or may not be compatilbe with the version requirement
          //
          // a dependency is waiting for resolve for 2 possible reasons:
          // 1. wait for `cargo` to run. `Cargo.toml` is not saved, so `cargo` haven't picked up the change.
          // 2. wait for `cargo` to finish. `cargo` is running in process to resolve the dependency.
          //
          // the formatter has 7 fields:
          // latest: the dependency has the latest version installed
          // local: the dependency is a local path dependency
          // not_installed: the dependency is not installed
          // waiting: the dependency is waiting for resolve
          // mixed_upgradeable: the installed version has an compatible upgrade, and the latest version is not compatible with the current version requirement
          // compatible_latest: the installed version can update to latest version
          // noncompatible_latest: the installed version can't upate to latest version
          // yanked: the installed version is yanked
          "decorationFormatter": {
            "latest": " {{installed}}",
            "local": "󱊪",
            "not_installed": "󰌚",
            "waiting": "󰦖",
            "mixed_upgradeable": " 󱌠 {{installed}} -> {{latest_matched}}, {{latest}}",
            "compatible_latest": " {{installed}} -> {{latest}}",
            "noncompatible_latest": "󱌠 {{installed}}, {{latest}}",
            "yanked": " yanked {{installed}}, {{latest_matched}}"
          }
        }
      }
    },
    // Specify the LSP name as a key here.
    "rust-analyzer": {
      //These initialization options are merged into Zed's defaults
      "initialization_options": {
        "inlayHints": {
          "maxLength": null,
          "lifetimeElisionHints": {
            "enable": "skip_trivial",
            "useParameterNames": true
          },
          "closureReturnTypeHints": {
            "enable": "always"
          }
        },
        "check": {
          "command": "clippy", // rust-analyzer.check.command (default: "check")
          "workspace": true
        }
      }
    },
    "vtsls": {
      "settings": {
        // For JavaScript:
        "javascript": {
          "inlayHints": {
            "parameterNames": {
              "enabled": "all",
              "suppressWhenArgumentMatchesName": false
            },
            "parameterTypes": {
              "enabled": true
            },
            "variableTypes": {
              "enabled": true,
              "suppressWhenTypeMatchesName": true
            },
            "propertyDeclarationTypes": {
              "enabled": true
            },
            "functionLikeReturnTypes": {
              "enabled": true
            },
            "enumMemberValues": {
              "enabled": true
            }
          }
        },
        // For TypeScript:
        "typescript": {
          "inlayHints": {
            "parameterNames": {
              "enabled": "all",
              "suppressWhenArgumentMatchesName": false
            },
            "parameterTypes": {
              "enabled": true
            },
            "variableTypes": {
              "enabled": true,
              "suppressWhenTypeMatchesName": true
            },
            "propertyDeclarationTypes": {
              "enabled": true
            },
            "functionLikeReturnTypes": {
              "enabled": true
            },
            "enumMemberValues": {
              "enabled": true
            }
          }
        }
      }
    }
  }
}
